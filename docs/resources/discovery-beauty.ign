{
  "ignition": {
    "version": "3.1.0"
  },
  "systemd": {
    "units": [
      {
        "name": "precache-images.service",
        "enabled": true,
        "contents": "[Unit]\nDescription=Load prestaged images in discovery stage\n\nBefore=agent.service\n\n[Service]\nType=oneshot\nUser=root\nWorkingDirectory=/var/mnt\nExecStart=bash /usr/local/bin/extract-ai.sh\n#TimeoutStopSec=30\nExecStopPost=systemctl disable precache-images.service\n\n[Install]\nWantedBy=multi-user.target default.target\nWantedBy=agent.service"
      }
    ]
  },
  "storage": {
    "files": [
      {
        "overwrite": true,
        "path": "/usr/local/bin/extract-ai.sh",
        "mode": 755,
        "user": {
          "name": "root"
        },
        "contents": {
          "source": "data:text/plain;charset=utf-8;base64,IyEvYmluL2Jhc2gKIwojIFV0aWxpdHkgZm9yIGxvYWRpbmcgcHJlc3RhZ2VkIGltYWdlcyBkdXJpbmcgbm9kZSBpbnN0YWxsYXRpb24KIwoKUFJPRz0kKGJhc2VuYW1lICIkMCIpCgpEQVRBRElSPSIvdG1wL3ByZXN0YWdpbmciCkZTPSIvZGV2L2Rpc2svYnktcGFydGxhYmVsL2RhdGEiCgojIERldGVybWluZSB0aGUgaW1hZ2UgbGlzdCBmcm9tIHRoZSBzY3JpcHQgbmFtZSwgZXh0cmFjdC1haS5zaCBvciBleHRyYWN0LW9jcC5zaApJTUdfR1JPVVA9JChlY2hvICIke1BST0d9IiB8IHNlZCAtciAncy8uKmV4dHJhY3QtKC4qKVwuc2gvXDEvJykKSU1HX0xJU1RfRklMRT0iJHtEQVRBRElSfS8ke0lNR19HUk9VUH0taW1hZ2VzLnR4dCIKTUFQUElOR19GSUxFPSIke0RBVEFESVJ9L21hcHBpbmcudHh0IgoKIyBTZXQgdGhlIHBhcmFsbGVsaXphdGlvbiBqb2IgcG9vbCBzaXplIHRvIDgwJSBvZiB0aGUgY29yZXMKQ1BVUz0kKG5wcm9jIC0tYWxsKQpNQVhfQ1BVX01VTFQ9MC44CkpPQl9QT09MX1NJWkU9JChqcSAtbiAiJENQVVMqJE1BWF9DUFVfTVVMVCIgfCBjdXQgLWQgLiAtZjEpCgojIEdldCBpbml0aWFsIHN0YXJ0aW5nIHBvaW50IGZvciBpbmZvIGxvZyBhdCBlbmQgb2YgZXhlY3V0aW9uClNUQVJUPSR7U0VDT05EU30KCiMKIyBjbGVhbnVwOiBDbGVhbiB1cCByZXNvdXJjZXMgb24gZXhpdAojCmZ1bmN0aW9uIGNsZWFudXAgewogICAgY2QgLwogICAgaWYgbW91bnRwb2ludCAtcSAiJHtEQVRBRElSfSI7IHRoZW4KICAgICAgICB1bW91bnQgIiR7REFUQURJUn0iCiAgICBmaQoKICAgIHJtIC1yZiAiJHtEQVRBRElSfSIKfQoKdHJhcCBjbGVhbnVwIEVYSVQKCiMKIyBtb3VudF9kYXRhOgojCmZ1bmN0aW9uIG1vdW50X2RhdGEgewogICAgaWYgISBta2RpciAtcCAiJHtEQVRBRElSfSI7IHRoZW4KICAgICAgICBlY2hvICIke1BST0d9OiBbRkFJTF0gRmFpbGVkIHRvIGNyZWF0ZSAke0RBVEFESVJ9IgogICAgICAgIGV4aXQgMQogICAgZmkKCiAgICBpZiBbICEgLWIgIiR7RlN9IiBdOyB0aGVuCiAgICAgICAgZWNobyAiJHtQUk9HfTogW0ZBSUxdIE5vdCBhIGJsb2NrIGRldmljZTogJHtGU30iCiAgICAgICAgZXhpdCAxCiAgICBmaQoKICAgIGlmICEgbW91bnQgIiR7RlN9IiAiJHtEQVRBRElSfSI7IHRoZW4KICAgICAgICBlY2hvICIke1BST0d9OiBbRkFJTF0gRmFpbGVkIHRvIG1vdW50ICR7RlN9IgogICAgICAgIGV4aXQgMQogICAgZmkKCiAgICBmb3IgZiBpbiAiJHtJTUdfTElTVF9GSUxFfSIgIiR7TUFQUElOR19GSUxFfSI7IGRvCiAgICAgICAgaWYgWyAhIC1mICIke2Z9IiBdOyB0aGVuCiAgICAgICAgICAgIGVjaG8gIiR7UFJPR306IFtGQUlMXSBDb3VsZCBub3QgZmluZCAke2Z9IgogICAgICAgICAgICBleGl0IDEKICAgICAgICBmaQogICAgZG9uZQoKICAgIGlmICEgcHVzaGQgIiR7REFUQURJUn0iOyB0aGVuCiAgICAgICAgZWNobyAiJHtQUk9HfTogW0ZBSUxdIEZhaWxlZCB0byBjaGRpciB0byAke0RBVEFESVJ9IgogICAgICAgIGV4aXQgMQogICAgZmkKfQoKIwojIGNvcHlfaW1hZ2U6IEZ1bmN0aW9uIHRoYXQgaGFuZGxlcyBleHRyYWN0aW5nIGFuIGltYWdlIHRhcmJhbGwgYW5kIGNvcHlpbmcgaXQgaW50byBjb250YWluZXIgc3RvcmFnZS4KIyAgICAgICAgICAgICBMYXVuY2hlZCBpbiBiYWNrZ3JvdW5kIGZvciBwYXJhbGxlbGl6YXRpb24sIG9yIGlubGluZSBmb3IgcmV0cmllcwojCmZ1bmN0aW9uIGNvcHlfaW1hZ2UgewogICAgbG9jYWwgY3VycmVudF9jb3B5PSQxCiAgICBsb2NhbCB0b3RhbF9jb3BpZXM9JDIKICAgIGxvY2FsIHVyaT0kMwogICAgbG9jYWwgdGFnPSQ0CiAgICBsb2NhbCByYz0wCiAgICBsb2NhbCBuYW1lPQoKICAgIGVjaG8gIiR7UFJPR306IFtERUJVR10gRXh0cmFjdGluZyBpbWFnZSAke3VyaX0iCiAgICBuYW1lPSQoYmFzZW5hbWUgIiR7dXJpLzovX30iKQogICAgaWYgISB0YXIgLS11c2UtY29tcHJlc3MtcHJvZ3JhbT1waWd6IC14ZiAiJHtuYW1lfS50Z3oiOyB0aGVuCiAgICAgICAgZWNobyAiJHtQUk9HfTogW0VSUk9SXSBDb3VsZCBub3QgZXh0cmFjdCB0aGUgaW1hZ2UgJHtuYW1lfS50Z3oiCiAgICAgICAgcmV0dXJuIDEKICAgIGZpCgogICAgaWYgW1sgIiR7SU1HX0dST1VQfSIgPSAiYWkiICYmIC1uICIke3RhZ30iICYmICIke3VyaX0iID1+ICJAc2hhIiBdXTsgdGhlbgogICAgICAgICMgRHVyaW5nIHRoZSBBSSBsb2FkaW5nIHN0YWdlLCBpZiB0aGUgaW1hZ2UgaGFzIGEgdGFnLCBsb2FkIHRoYXQgaW50byBjb250YWluZXIgc3RvcmFnZSBhcyB3ZWxsCiAgICAgICAgZWNobyAiJHtQUk9HfTogW0lORk9dIENvcHlpbmcgJHt1cml9LCB3aXRoIHRhZyAke3RhZ30gWyR7Y3VycmVudF9jb3B5fS8ke3RvdGFsX2NvcGllc31dIgogICAgICAgIG5vdGFnPSR7dXJpL0AqfQogICAgICAgIHNrb3BlbyBjb3B5IC0tcmV0cnktdGltZXMgMTAgImRpcjovLyR7UFdEfS8ke25hbWV9IiAiY29udGFpbmVycy1zdG9yYWdlOiR7dXJpfSIgLXEgJiYgXAogICAgICAgICAgICBza29wZW8gY29weSAtLXJldHJ5LXRpbWVzIDEwICJkaXI6Ly8ke1BXRH0vJHtuYW1lfSIgImNvbnRhaW5lcnMtc3RvcmFnZToke25vdGFnfToke3RhZ30iIC1xCiAgICAgICAgcmM9JD8KICAgIGVsc2UKICAgICAgICBlY2hvICIke1BST0d9OiBbSU5GT10gQ29weWluZyAke3VyaX0gWyR7Y3VycmVudF9jb3B5fS8ke3RvdGFsX2NvcGllc31dIgogICAgICAgIHNrb3BlbyBjb3B5IC0tcmV0cnktdGltZXMgMTAgImRpcjovLyR7UFdEfS8ke25hbWV9IiAiY29udGFpbmVycy1zdG9yYWdlOiR7dXJpfSIgLXEKICAgICAgICByYz0kPwogICAgZmkKCiAgICBlY2hvICIke1BST0d9OiBbSU5GT10gUmVtb3ZpbmcgZm9sZGVyIGZvciAke3VyaX0iCiAgICBybSAtcmYgIiR7bmFtZX0iCgogICAgcmV0dXJuICR7cmN9Cn0KCiMKIyBsb2FkX2ltYWdlczogTGF1bmNoIGpvYnMgdG8gcHJlc3RhZ2UgaW1hZ2VzIGZyb20gdGhlIGFwcHJvcHJpYXRlIGxpc3QgZmlsZQojCmZ1bmN0aW9uIGxvYWRfaW1hZ2VzIHsKICAgIGxvY2FsIC1BIHBpZHMgIyBIYXNoIHRoYXQgaW5jbHVkZSB0aGUgaW1hZ2VzIHB1bGxlZCBhbG9uZyB3aXRoIHRoZWlyIHBpZHMgdG8gYmUgbW9uaXRvcmVkIGJ5IHdhaXQgY29tbWFuZAogICAgbG9jYWwgLWEgaW1hZ2VzCiAgICBtYXBmaWxlIC10IGltYWdlcyA8IDwoIHNvcnQgLXUgIiR7SU1HX0xJU1RfRklMRX0iICkKCiAgICBsb2NhbCB0b3RhbF9jb3BpZXM9JHsjaW1hZ2VzW0BdfQogICAgbG9jYWwgY3VycmVudF9jb3B5PTAKICAgIGxvY2FsIGpvYl9jb3VudD0wCgogICAgZWNobyAiJHtQUk9HfTogW0lORk9dIFJlYWR5IHRvIGV4dHJhY3QgJHt0b3RhbF9jb3BpZXN9IGltYWdlcyB1c2luZyAkSk9CX1BPT0xfU0laRSBzaW11bHRhbmVvdXMgcHJvY2Vzc2VzIgoKICAgIGZvciB1cmkgaW4gIiR7aW1hZ2VzW0BdfSI7IGRvCiAgICAgICAgY3VycmVudF9jb3B5PSQoKGN1cnJlbnRfY29weSsxKSkKCiAgICAgICAgIyBDaGVjayB0aGF0IHdlJ3ZlIGdvdCBmcmVlIHNwYWNlIGluIHRoZSBqb2IgcG9vbAogICAgICAgIHdoaWxlIFsgIiR7am9iX2NvdW50fSIgLWdlICIke0pPQl9QT09MX1NJWkV9IiBdOyBkbwogICAgICAgICAgICBzbGVlcCAwLjEKICAgICAgICAgICAgam9iX2NvdW50PSQoam9icyB8IHdjIC1sKQogICAgICAgIGRvbmUKCiAgICAgICAgZWNobyAiJHtQUk9HfTogW0RFQlVHXSBQcm9jZXNzaW5nIGltYWdlICR7dXJpfSIKICAgICAgICBpZiBwb2RtYW4gaW1hZ2UgZXhpc3RzICIke3VyaX0iOyB0aGVuCiAgICAgICAgICAgIGVjaG8gIiR7UFJPR306IFtJTkZPXSBTa2lwcGluZyBleGlzdGluZyBpbWFnZSAke3VyaX0gWyR7Y3VycmVudF9jb3B5fS8ke3RvdGFsX2NvcGllc31dIgogICAgICAgICAgICBjb250aW51ZQogICAgICAgIGZpCgogICAgICAgIHRhZz0kKGdyZXAgIl4ke3VyaX09IiAiJHtNQVBQSU5HX0ZJTEV9IiB8IHNlZCAncy8uKjovLycpCiAgICAgICAgY29weV9pbWFnZSAiJHtjdXJyZW50X2NvcHl9IiAiJHt0b3RhbF9jb3BpZXN9IiAiJHt1cml9IiAiJHt0YWd9IiAmCgogICAgICAgIHBpZHNbJHt1cml9XT0kISAjIEtlZXBpbmcgdHJhY2sgb2YgdGhlIFBJRCBhbmQgY29udGFpbmVyIGltYWdlIGluIGNhc2UgdGhlIHB1bGwgZmFpbHMKICAgIGRvbmUKCiAgICBlY2hvICIke1BST0d9OiBbREVCVUddIFdhaXRpbmcgZm9yIGpvYiBjb21wbGV0aW9uIgogICAgZm9yIGltZyBpbiAiJHshcGlkc1tAXX0iOyBkbwogICAgICAgICMgV2FpdCBmb3IgZWFjaCBiYWNrZ3JvdW5kIHRhc2sgKFBJRCkuIElmIGFueSBlcnJvciwgdGhlbiBjb3B5IHRoZSBpbWFnZSBpbiB0aGUgZmFpbGVkIGFycmF5IHNvIGl0IGNhbiBiZSByZXRyaWVkIGxhdGVyCiAgICAgICAgaWYgISB3YWl0ICIke3BpZHNbJGltZ119IjsgdGhlbgogICAgICAgICAgICBlY2hvICIke1BST0d9OiBbRVJST1JdIFB1bGwgZmFpbGVkIGZvciBjb250YWluZXIgaW1hZ2U6ICR7aW1nfSAuIFJldHJ5aW5nIGxhdGVyLi4uICIKICAgICAgICAgICAgZmFpbGVkX2NvcGllcys9KCIke2ltZ30iKSAjIEZhaWxlZCwgdGhlbiBhZGQgdGhlIGltYWdlIHRvIGJlIHJldHJpZXZlZCBsYXRlcgogICAgICAgIGZpCiAgICBkb25lCn0KCiMKIyByZXRyeV9pbWFnZXM6IFJldHJ5IGxvYWRpbmcgYW55IGZhaWxlZCBpbWFnZXMgaW50byBjb250YWluZXIgc3RvcmFnZQojCmZ1bmN0aW9uIHJldHJ5X2ltYWdlcyB7CiAgICBsb2NhbCB0b3RhbF9jb3BpZXM9JHsjZmFpbGVkX2NvcGllc1tAXX0KCiAgICBpZiBbICIke3RvdGFsX2NvcGllc30iIC1lcSAwIF07IHRoZW4KICAgICAgICByZXR1cm4gMAogICAgZmkKCiAgICBsb2NhbCByYz0wCiAgICBsb2NhbCB0YWcKICAgIGxvY2FsIGN1cnJlbnRfY29weT0wCgogICAgZWNobyAiJHtQUk9HfTogW1JFVFJZSU5HXSIKICAgIGZvciBmYWlsZWRfY29weSBpbiAiJHtmYWlsZWRfY29waWVzW0BdfSI7IGRvCiAgICAgICAgY3VycmVudF9jb3B5PSQoKGN1cnJlbnRfY29weSsxKSkKCiAgICAgICAgZWNobyAiJHtQUk9HfTogW1JFVFJZXSBSZXRyeWluZyBmYWlsZWQgaW1hZ2UgcHVsbDogJHtmYWlsZWRfY29weX0iCgogICAgICAgIHRhZz0kKGdyZXAgIl4ke3VyaX09IiAiJHtNQVBQSU5HX0ZJTEV9IiB8IHNlZCAncy8uKjovLycpCiAgICAgICAgY29weV9pbWFnZSAiJHtjdXJyZW50X2NvcHl9IiAiJHt0b3RhbF9jb3BpZXN9IiAiJHt1cml9IiAiJHt0YWd9IgogICAgICAgIHJjPSQ/CiAgICBkb25lCgogICAgZWNobyAiJHtQUk9HfTogW0lORk9dIEltYWdlIGxvYWQgZG9uZSIKICAgIHJldHVybiAiJHtyY30iCn0KCmlmIFtbICIke0JBU0hfU09VUkNFWzBdfSIgPSAiJHswfSIgXV07IHRoZW4KICAgIGZhaWxlZF9jb3BpZXM9KCkgIyBBcnJheSB0aGF0IHdpbGwgaW5jbHVkZSBhbGwgdGhlIGltYWdlcyB0aGF0IGZhaWxlZCB0byBiZSBwdWxsZWQKCiAgICBtb3VudF9kYXRhCgogICAgbG9hZF9pbWFnZXMKCiAgICBpZiAhIHJldHJ5X2ltYWdlczsgdGhlbgogICAgICAgIGVjaG8gIiR7UFJPR306IFtGQUlMXSAkeyNmYWlsZWRfY29waWVzW0BdfSBpbWFnZXMgd2VyZSBub3QgbG9hZGVkIHN1Y2Nlc3NmdWxseSwgYWZ0ZXIgJCgoU0VDT05EUy1TVEFSVCkpIHNlY29uZHMiICNudW1iZXIgb2YgZmFpbGluZyBpbWFnZXMKICAgICAgICBleGl0IDEKICAgIGVsc2UKICAgICAgICBlY2hvICIke1BST0d9OiBbU1VDQ0VTU10gQWxsIGltYWdlcyB3ZXJlIGxvYWRlZCwgaW4gJCgoU0VDT05EUy1TVEFSVCkpIHNlY29uZHMiCiAgICAgICAgZXhpdCAwCiAgICBmaQpmaQo="
        }
      },
      {
        "overwrite": true,
        "path": "/usr/local/bin/agent-fix-bz1964591",
        "mode": 755,
        "user": {
          "name": "root"
        },
        "contents": {
          "source": "data:,%23%21%2Fusr%2Fbin%2Fsh%0A%0A%23%20This%20script%20is%20a%20workaround%20for%20bugzilla%201964591%20where%20symlinks%20inside%20%2Fvar%2Flib%2Fcontainers%2F%20get%0A%23%20corrupted%20under%20some%20circumstances.%0A%23%0A%23%20In%20order%20to%20let%20agent.service%20start%20correctly%20we%20are%20checking%20here%20whether%20the%20requested%0A%23%20container%20image%20exists%20and%20in%20case%20%22podman%20images%22%20returns%20an%20error%20we%20try%20removing%20the%20faulty%0A%23%20image.%0A%23%0A%23%20In%20such%20a%20scenario%20agent.service%20will%20detect%20the%20image%20is%20not%20present%20and%20pull%20it%20again.%20In%20case%0A%23%20the%20image%20is%20present%20and%20can%20be%20detected%20correctly%2C%20no%20any%20action%20is%20required.%0A%0AIMAGE%3D%24%28echo%20%241%20%7C%20sed%20%27s%2F%5B%40%3A%5D.%2A%2F%2F%27%29%0Apodman%20images%20%7C%20grep%20%24IMAGE%20%7C%7C%20podman%20rmi%20--force%20%241%20%7C%7C%20true"
        }
      }
    ]
  }
}
